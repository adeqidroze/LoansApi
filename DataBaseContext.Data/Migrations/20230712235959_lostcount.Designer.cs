// <auto-generated />
using System;
using DataBaseContext.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataBaseContext.Data.Migrations
{
    [DbContext(typeof(LoanDatabaseContext))]
    [Migration("20230712235959_lostcount")]
    partial class lostcount
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Database.Domain.Loan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoanIdentityNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoanPeriod")
                        .HasColumnType("int");

                    b.Property<string>("LoanType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Loans");
                });

            modelBuilder.Entity("Database.Domain.Logs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrentExeption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExceptionLogger")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Level")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StackTrace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NLogs");
                });

            modelBuilder.Entity("Database.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password_salt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserRole")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Age = 22,
                            FirstName = "SuperAdmin",
                            IsBlocked = false,
                            LastName = "SuperAdmin",
                            Password = "31f2bef03c1e43a37695acb08c18c764ae8562350b64ea022c7e921a3ad4a2d2",
                            Password_salt = "2+QCyOnC8h06goFFTpuHFkhQB4S3byaITkWqTDSX97A=",
                            Salary = 10000000.0,
                            UserName = "SuperAdmin",
                            UserRole = "Admin"
                        },
                        new
                        {
                            Id = -2,
                            Age = 0,
                            FirstName = "Assistant",
                            IsBlocked = false,
                            LastName = "Assistant",
                            Password = "c67cbe0b9e69b6295cd6bc6fc2cfac94f0457de05c17a1c9a3b894ae23c394b9",
                            Password_salt = "9+QCyOnC8h06goFFTpuHFkhQB4S3byaITkWqTDSX97g=",
                            Salary = 0.0,
                            UserName = "Assistant",
                            UserRole = "Assistant"
                        });
                });

            modelBuilder.Entity("Database.Domain.Loan", b =>
                {
                    b.HasOne("Database.Domain.User", "User")
                        .WithMany("Loans")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Database.Domain.User", b =>
                {
                    b.Navigation("Loans");
                });
#pragma warning restore 612, 618
        }
    }
}
